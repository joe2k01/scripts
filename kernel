#!/usr/bin/env bash
#
# Little script to compile my custom Android Kernel(s)
#
# Copyright (C) 2017 Giuseppe "joe2k01" Barillari
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>

color="\e[33m"
normal="\e[0m"
SSD=/media/joe2k01/SSD/WhitePugKernels/
zip=WhitePugKernel-V$2.zip
anykernel=${SSD}$1

# Start the whole stuff with a nice help function
function h() {
	echo -e ""
	echo -e "${BOLD}How to use:${RST} ./${0#./} device\n"
	exit
}

function package()
{
	cd ${anykernel}
	zip -q -r9 $zip * -x README.md $zip
	wait
}

# Device check
if [ -z "$1" ]; then
	echo -e "Specify a device"
	h
	exit
else
	if [ "$1" == "gts210vewifi" ] || [ "$1" == "hammerheadcaf" ]; then
		if [ "$1" == "gts210vewifi" ]; then
			ARCH=arm64
			CROSS_COMPILE=${SSD}aarch64-linux-android-4.9/bin/aarch64-linux-android-
			DEFCONFIG=wpk_$1_defconfig
		else
			ARCH=arm
			CROSS_COMPILE=${SSD}gcc-linaro-6.3.1-2017.05-x86_64_arm-eabi/bin/arm-eabi-
			DEFCONFIG=wpk_defconfig
		fi
	else
		echo -e "$1 is not supported"
		exit
	fi
fi

#Build it
echo -e "${color}Compiling kernel${normal}"
make -s clean &&
make -s mrproper &&
make -s $DEFCONFIG &&
if [ "$1" == "gts210vewifi" ]; then
	make -s -j$( nproc --all ) &&
	echo -e "${color}Compilation went fine"
else
	make -s -j$( nproc --all ) CONFIG_NO_ERROR_ON_MISMATCH=y &&
	echo -e "${color}Compilation went fine"
fi

# Package in zip
clear
echo -e "${color}Packaging${normal}"
if [ "$1" == "gts210vewifi" ]; then
	rm ../$1/Image.gz ../$1/*.zip
	cp arch/arm64/boot/Image.gz ../$1/
	package
else
	rm ../$1/zImage-dtb ../$1/*.zip
	cp arch/arm/boot/zImage-dtb ../$1/
	package
fi

sleep 4

echo -e "${color}"
echo -e "         _    _ _     _ _      ______            _   __                     _ "
echo -e "        | |  | | |   (_| |     | ___ \          | | / /                    | |"
echo -e "        | |  | | |__  _| |_ ___| |_/ _   _  __ _| |/ /  ___ _ __ _ __   ___| |"
echo -e "        | |/\| |  _ \| | __/ _ |  __| | | |/ _  |    \ / _ |  __|  _ \ / _ | |"
echo -e "        \  /\  | | | | | ||  __| |  | |_| | (_| | |\  |  __| |  | | | |  __| |"
echo -e "         \/  \/|_| |_|_|\__\___\_|   \__ _|\__  \_| \_/\___|_|  |_| |_|\___|_|"
echo -e "                                           __/ |                              "
echo -e "                                          |___/                               "
